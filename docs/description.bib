@book{diestel2017graph,
author = {Diestel, Reinhard},
title = {Graph Theory},
year = {2017},
isbn = {3662536218},
publisher = {Springer Publishing Company, Incorporated},
edition = {5th},
abstract = {This standard textbook of modern graph theory, now in its fifth edition, combines the authority of a classic with the engaging freshness of style that is the hallmark of active mathematics. It covers the core material of the subject with concise yet reliably complete proofs, while offering glimpses of more advanced methods in each field by one or two deeper results, again with proofs given in full detail. The book can be used as a reliable text for an introductory course, as a graduate text, and for self-study. From the reviews: This outstanding book cannot be substituted with any other book on the present textbook market. It has every chance of becoming the standard textbook for graph theory. Acta Scientiarum Mathematiciarum Deep, clear, wonderful. This is a serious book about the heart of graph theory. It has depth and integrity. Persi Diaconis &amp; Ron Graham, SIAM Review The book has received a very enthusiastic reception, which it amply deserves. A masterly elucidation of modern graph theory. Bulletin of the Institute of Combinatorics and its Applications Succeeds dramatically ... a hell of a good book. MAA Reviews A highlight of the book is what is by far the best account in print of the Seymour-Robertson theory of graph minors. Mathematika ... like listening to someone explain mathematics. Bulletin of the AMS}
}

%	doi = {10.48550/arXiv.0710.3901},
%	url = {http://arxiv.org/abs/0710.3901},
@misc{tedder_simple_2008,
	title = {Simple, linear-time modular decomposition},
	abstract = {Modular decomposition is fundamental for many important problems in algorithmic graph theory including transitive orientation, the recognition of several classes of graphs, and certain combinatorial optimization problems. Accordingly, there has been a drive towards a practical, linear-time algorithm for the problem. Despite considerable effort, such an algorithm has remained elusive. The linear-time algorithms to date are impractical and of mainly theoretical interest. In this paper we present the first simple, linear-time algorithm to compute the modular decomposition tree of an undirected graph. The breakthrough comes by combining the best elements of two different approaches to the problem.},
	urldate = {2023-01-16},
	publisher = {arXiv},
	author = {Tedder, Marc and Corneil, Derek and Habib, Michel and Paul, Christophe},
	month = mar,
	year = {2008},
	note = {arXiv:0710.3901 [cs]},
	keywords = {Computer Science - Discrete Mathematics},
	annote = {Comment: The paper has been entirely rewritten and repositioned to improve exposition and the detail provided in this extended abstract. Also fixed two small errors},
}

@inproceedings{biere_gimsatul_2022,
	series = {Department of {Computer} {Science} {Series} of {Publications} {B}},
	title = {Gimsatul, {IsaSAT} and {Kissat} entering the {SAT} {Competition} 2022},
	volume = {B-2022-1},
	booktitle = {Proc. of {SAT} {Competition} 2022 – {Solver} and {Benchmark} {Descriptions}},
	publisher = {University of Helsinki},
	author = {Biere, Armin and Fleury, Mathias},
	editor = {Balyo, Tomas and Heule, Marijn and Iser, Markus and Järvisalo, Matti and Suda, Martin},
	year = {2022},
	pages = {10--11},
}

%	note = {ISSN: 2575-8454},
%	doi = {10.1109/FOCS46700.2020.00062},
@inproceedings{bonnet_twin-width_2020,
	title = {Twin-width {I}: tractable {FO} model checking},
	shorttitle = {Twin-width {I}},
	abstract = {Inspired by a width invariant defined on permutations by Guillemot and Marx [SODA '14], we introduce the notion of twin-width on graphs and on matrices. Proper minor-closed classes, bounded rank-width graphs, map graphs, Kt- free unit d-dimensional ball graphs, posets with antichains of bounded size, and proper subclasses of dimension-2 posets all have bounded twin-width. On all these classes (except map graphs without geometric embedding) we show how to compute in polynomial time a sequence of d-contractions, witness that the twin-width is at most d. We show that FO model checking, that is deciding if a given first-order formula φ evaluates to true for a given binary structure G on a domain D, is FPT in {\textbar}φ{\textbar} on classes of bounded twin-width, provided the witness is given. More precisely, being given a d-contraction sequence for G, our algorithm runs in time f(d,{\textbar}φ{\textbar})·{\textbar}D{\textbar} where f is a computable but non-elementary function. We also prove that bounded twin-width is preserved by FO interpretations and transductions (allowing operations such as squaring or complementing a graph). This unifies and significantly extends the knowledge on fixed-parameter tractability of FO model checking on non-monotone classes, such as the FPT algorithm on bounded-width posets by Gajarský et al. [FOCS '15].},
	booktitle = {2020 {IEEE} 61st {Annual} {Symposium} on {Foundations} of {Computer} {Science} ({FOCS})},
	author = {Bonnet, Édouard and Kim, Eun Jung and Thomassé, Stéphan and Watrigant, Rémi},
	month = nov,
	year = {2020},
	keywords = {Computational modeling, Computer science, Dynamic programming, fixed-parameter tractability, FO model checking, Lips, Mathematics, Model checking, Periodic structures, Twin-width},
	pages = {601--612},
}

%	doi = {10.1137/1.9781611976465.118},
%	url = {https://epubs.siam.org/doi/10.1137/1.9781611976465.118},
@incollection{bonnet_twin-width_2021,
	series = {Proceedings},
	title = {Twin-width {II}: small classes},
	shorttitle = {Twin-width {II}},
	abstract = {The recently introduced twin-width of a graph G is the minimum integer d such that G has a d-contraction sequence, that is, a sequence of {\textbar}V(G){\textbar} – 1 iterated vertex identifications for which the overall maximum number of red edges incident to a single vertex is at most d, where a red edge appears between two sets of identified vertices if they are not homogeneous in G (not fully adjacent nor fully non-adjacent). We show that if a graph admits a d-contraction sequence, then it also has a linear-arity tree of f(d)-contractions, for some function f. Informally if we accept to worsen the twin-width bound, we can choose the next contraction from a set of Θ({\textbar}V(G){\textbar}) pairwise disjoint pairs of vertices. This has two main consequences. First it permits to show that every bounded twin-width class is small, i.e., has at most n!cn graphs labeled by [n], for some constant c. This unifies and extends the same result for bounded treewidth graphs [Beineke and Pippert, JCT '69], proper subclasses of permutations graphs [Marcus and Tardos, JCTA '04], and proper minor-free classes [Norine et al., JCTB '06]. It implies in turn that bounded-degree graphs, interval graphs, and unit disk graphs have unbounded twin-width. The second consequence is an O(log n)-adjacency labeling scheme for bounded twin-width graphs, confirming several cases of the implicit graph conjecture.
We then explore the small conjecture that, conversely, every small hereditary class has bounded twin-width. The conjecture passes many tests. Inspired by sorting networks of logarithmic depth, we show that logΘ(log log d) n-subdivisions of Kn (a small class when d is constant) have twin-width at most d. We obtain a rather sharp converse with a surprisingly direct proof: the logd+1 n-subdivision of Kn has twin-width at least d. Secondly graphs with bounded stack or queue number (also small classes) have bounded twin-width. These sparse classes are surprisingly rich since they contain certain (small) classes of expanders. Thirdly we show that cubic expanders obtained by iterated random 2-lifts from K4 [Bilu and Linial, Combinatorica '06] also have bounded twin-width. These graphs are related to so-called separable permutations and also form a small class. We suggest a promising connection between the small conjecture and group theory.
Finally we define a robust notion of sparse twin-width. We show that for a hereditary class  of bounded twin-width the five following conditions are equivalent: every graph in  (1) is Kt,t-free for some fixed t, (2) has an adjacency matrix without a d-by-d division with a 1 entry in each d2 cells for some fixed d, (3) has at most linearly many edges, (4) the subgraph closure of  has bounded twin-width, and (5)  has bounded expansion. We discuss how sparse classes with similar behavior with respect to clique subdivisions compare to bounded sparse twin-width.},
	urldate = {2023-06-05},
	booktitle = {Proceedings of the 2021 {ACM}-{SIAM} {Symposium} on {Discrete} {Algorithms} ({SODA})},
	publisher = {Society for Industrial and Applied Mathematics},
	author = {Bonnet, Édouard and Geniet, Colin and Kim, Eun Jung and Thomassé, Stéphan and Watrigant, Rémi},
	month = jan,
	year = {2021},

	pages = {1977--1996},
}

%	url = {https://drops.dagstuhl.de/opus/volltexte/2021/14104},
%	doi = {10.4230/LIPIcs.ICALP.2021.35},
%	editor = {Bansal, Nikhil and Merelli, Emanuela and Worrell, James},
%	note = {ISSN: 1868-8969},
@inproceedings{bonnet_twin-width_2021-1,
	address = {Dagstuhl, Germany},
	series = {Leibniz {International} {Proceedings} in {Informatics} ({LIPIcs})},
	title = {Twin-width {III}: {Max} {Independent} {Set}, {Min} {Dominating} {Set}, and {Coloring}},
	volume = {198},
	isbn = {978-3-95977-195-5},
	shorttitle = {Twin-width {III}},
	urldate = {2023-06-05},
	booktitle = {48th {International} {Colloquium} on {Automata}, {Languages}, and {Programming} ({ICALP} 2021)},
	publisher = {Schloss Dagstuhl – Leibniz-Zentrum für Informatik},
	author = {Bonnet, Édouard and Geniet, Colin and Kim, Eun Jung and Thomassé, Stéphan and Watrigant, Rémi},
	year = {2021},
	keywords = {Approximation Algorithms, Coloring, Exact Algorithms, Max Independent Set, Min Dominating Set, Parameterized Algorithms, Twin-width},
	pages = {35:1--35:20},
}


% 	url = {http://arxiv.org/abs/2110.06146},
%	month = oct,
@misc{schidler_sat_2021,
	title = {A {SAT} {Approach} to {Twin}-{Width}},
	abstract = {The graph invariant twin-width was recently introduced by Bonnet, Kim, Thomasse´, and Watrigan. Problems expressible in ﬁrst-order logic, which includes many prominent NP-hard problems, are tractable on graphs of bounded twin-width if a certiﬁcate for the twin-width bound is provided as an input. Computing such a certiﬁcate, however, is an intrinsic problem, for which no nontrivial algorithm is known.},
	language = {en},
	urldate = {2023-01-03},
	publisher = {arXiv},
	author = {Schidler, André and Szeider, Stefan},
	year = {2021},
	note = {arXiv:2110.06146 [cs, math]},
	keywords = {Computer Science - Data Structures and Algorithms, Mathematics - Combinatorics, Computer Science - Logic in Computer Science},
	annote = {Comment: Preprint of a paper to appear at ALENEX'22},
}

%	url = {http://arxiv.org/abs/2110.03957},
%	doi = {10.1137/21M1452834},
@article{ahn_bounds_2022,
	title = {Bounds for the {Twin}-width of {Graphs}},
	volume = {36},
	issn = {0895-4801, 1095-7146},
	abstract = {Bonnet, Kim, Thomass{\textbackslash}'\{e\}, and Watrigant (2020) introduced the twin-width of a graph. We show that the twin-width of an \$n\$-vertex graph is less than \$(n+{\textbackslash}sqrt\{n{\textbackslash}ln n\}+{\textbackslash}sqrt\{n\}+2{\textbackslash}ln n)/2\$, and the twin-width of an \$m\$-edge graph for a positive \$m\$ is less than \${\textbackslash}sqrt\{3m\}+ m{\textasciicircum}\{1/4\} {\textbackslash}sqrt\{{\textbackslash}ln m\} / (4{\textbackslash}cdot 3{\textasciicircum}\{1/4\}) + 3m{\textasciicircum}\{1/4\} / 2\$. Conference graphs of order \$n\$ (when such graphs exist) have twin-width at least \$(n-1)/2\$, and we show that Paley graphs achieve this lower bound. We also show that the twin-width of the Erd{\textbackslash}H\{o\}s-R{\textbackslash}'\{e\}nyi random graph \$G(n,p)\$ with \$1/n{\textbackslash}leq p=p(n){\textbackslash}leq 1/2\$ is larger than \$2p(1-p)n - (2{\textbackslash}sqrt\{2\}+{\textbackslash}varepsilon){\textbackslash}sqrt\{p(1-p)n{\textbackslash}ln n\}\$ asymptotically almost surely for any positive \${\textbackslash}varepsilon\$. Lastly, we calculate the twin-width of random graphs \$G(n,p)\$ with \$p{\textbackslash}leq c/n\$ for a constant \$c{\textless}1\$, determining the thresholds at which the twin-width jumps from \$0\$ to \$1\$ and from \$1\$ to \$2\$.},
	number = {3},
	urldate = {2023-02-10},
	journal = {SIAM Journal on Discrete Mathematics},
	author = {Ahn, Jungho and Hendrey, Kevin and Kim, Donggyu and Oum, Sang-il},
	month = sep,
	year = {2022},
	note = {arXiv:2110.03957 [cs, math]},
	keywords = {Computer Science - Discrete Mathematics, Mathematics - Combinatorics, 05C35},
	pages = {2352--2366},
	annote = {Comment: 22 pages, 1 figure},
}

%	url = {https://www.sciencedirect.com/science/article/pii/S157401371000002X},
%	doi = {10.1016/j.cosrev.2010.01.001},
%	month = feb,
@article{habib_survey_2010,
	title = {A survey of the algorithmic aspects of modular decomposition},
	volume = {4},
	issn = {1574-0137},
	abstract = {Modular decomposition is a technique that applies to (but is not restricted to) graphs. The notion of a module naturally appears in the proofs of many graph theoretical theorems. Computing the modular decomposition tree is an important preprocessing step to solve a large number of combinatorial optimization problems. Since the first polynomial time algorithm in the early 1970’s, the algorithmic of the modular decomposition has known an important development. This paper survey the ideas and techniques that arose from this line of research.},
	language = {en},
	number = {1},
	urldate = {2023-06-06},
	journal = {Computer Science Review},
	author = {Habib, Michel and Paul, Christophe},
	year = {2010},
	pages = {41--59},
}





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%	url = {https://doi.org/10.1007/11564751_73},
%	doi = {10.1007/11564751_73},
%file = {Submitted Version:/Users/master/Zotero/storage/4BRLAVJU/Sinz - 2005 - Towards an optimal CNF encoding of Boolean cardina.pdf:application/pdf},
%month = oct,
@inproceedings{sinz_towards_2005,
	address = {Berlin, Heidelberg},
	series = {{CP}'05},
	title = {Towards an optimal {CNF} encoding of {Boolean} cardinality constraints},
	isbn = {978-3-540-29238-8},
	abstract = {We consider the problem of encoding Boolean cardinality constraints in conjunctive normal form (CNF). Boolean cardinality constraints are formulae expressing that at most (resp. at least) k out of n propositional variables are true. We give two novel encodings that improve upon existing results, one which requires only 7n clauses and 2n auxiliary variables, and another one demanding O(n·k) clauses, but with the advantage that inconsistencies can be detected in linear time by unit propagation alone. Moreover, we prove a linear lower bound on the number of required clauses for any such encoding.},
	urldate = {2023-06-05},
	booktitle = {Proceedings of the 11th {International} {Conference} on {Principles} and {Practice} of {Constraint} {Programming}},
	publisher = {Springer-Verlag},
	author = {Sinz, Carsten},
	year = {2005},
	pages = {827--831},
}

%	doi = {10.1007/978-3-319-10428-7_39},
%	file = {Submitted Version:/Users/master/Zotero/storage/TL56JJZX/Martins et al. - 2014 - Incremental Cardinality Constraints for MaxSAT.pdf:application/pdf},
@inproceedings{martins_incremental_2014,
	address = {Cham},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Incremental {Cardinality} {Constraints} for {MaxSAT}},
	isbn = {978-3-319-10428-7},
	abstract = {Maximum Satisfiability (MaxSAT) is an optimization variant of the Boolean Satisfiability (SAT) problem. In general, MaxSAT algorithms perform a succession of SAT solver calls to reach an optimum solution making extensive use of cardinality constraints. Many of these algorithms are non-incremental in nature, i.e. at each iteration the formula is rebuilt and no knowledge is reused from one iteration to another. In this paper, we exploit the knowledge acquired across iterations using novel schemes to use cardinality constraints in an incremental fashion. We integrate these schemes with several MaxSAT algorithms. Our experimental results show a significant performance boost for these algorithms as compared to their non-incremental counterparts. These results suggest that incremental cardinality constraints could be beneficial for other constraint solving domains.},
	language = {en},
	booktitle = {Principles and {Practice} of {Constraint} {Programming}},
	publisher = {Springer International Publishing},
	author = {Martins, Ruben and Joshi, Saurabh and Manquinho, Vasco and Lynce, Inês},
	editor = {O’Sullivan, Barry},
	year = {2014},
	keywords = {Cardinality Constraint, Conjunctive Normal Form, Conjunctive Normal Form Formula, Relaxation Variable, Unit Clause},
	pages = {531--548},
}
